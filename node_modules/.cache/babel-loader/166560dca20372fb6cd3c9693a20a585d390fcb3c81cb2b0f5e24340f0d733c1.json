{"ast":null,"code":"var _jsxFileName = \"/Users/sohamkolambe/secondary-website/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = message => {\n    const newMessage = {\n      text: message,\n      isUser: true\n    };\n    setMessages([...messages, newMessage]);\n    // You can add logic here to receive a response from the system\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user' : 'system'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message...\",\n      onChange: e => handleSendMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","handleSendMessage","message","newMessage","text","isUser","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/sohamkolambe/secondary-website/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = (message) => {\n    const newMessage = { text: message, isUser: true };\n    setMessages([...messages, newMessage]);\n    // You can add logic here to receive a response from the system\n  };\n\n  return (\n    <div className=\"chatbot\">\n      {/* Render the chat messages */}\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.isUser ? 'user' : 'system'}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      {/* Chat input */}\n      <input\n        type=\"text\"\n        placeholder=\"Type your message...\"\n        onChange={(e) => handleSendMessage(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAK,CAAC;IAClDL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,UAAU,CAAC,CAAC;IACtC;EACF,CAAC;;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAEtBX,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BR,QAAQ,CAACS,GAAG,CAAC,CAACN,OAAO,EAAEO,KAAK,kBAC3Bb,OAAA;QAAiBU,SAAS,EAAG,WAAUJ,OAAO,CAACG,MAAM,GAAG,MAAM,GAAG,QAAS,EAAE;QAAAE,QAAA,EACzEL,OAAO,CAACE;MAAI,GADLK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,QAAQ,EAAGC,CAAC,IAAKhB,iBAAiB,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CA3BQD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA6BhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}