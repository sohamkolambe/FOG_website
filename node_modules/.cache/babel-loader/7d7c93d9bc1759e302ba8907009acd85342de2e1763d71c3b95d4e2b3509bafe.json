{"ast":null,"code":"var _jsxFileName = \"/Users/sohamkolambe/secondary-website/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  addProduct\n}) => {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const chatContainerRef = useRef(null);\n  const handleUserMessageChange = event => {\n    setUserMessage(event.target.value);\n  };\n  const handleUserMessageSubmit = event => {\n    event.preventDefault();\n    if (userMessage.trim() !== '') {\n      const newChatHistory = [...chatHistory, {\n        message: userMessage,\n        isUser: true\n      }];\n      setChatHistory(newChatHistory);\n\n      // Simulating response from the system\n      const responseMessage = `You said: ${userMessage}`;\n      const newProduct = {\n        id: Date.now(),\n        name: `New Product ${newChatHistory.length}`,\n        link: 'https://example.com/new-product',\n        imageSrc: 'new-product.jpg'\n      };\n      addProduct(newProduct);\n      const response = {\n        message: responseMessage,\n        isUser: false\n      };\n      setTimeout(() => {\n        setChatHistory([...newChatHistory, response]);\n        setUserMessage('');\n      }, 1000);\n    }\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      className: \"chat-history\",\n      children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${chat.isUser ? 'user' : 'system'}`,\n        children: chat.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUserMessageSubmit,\n      className: \"user-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userMessage,\n        onChange: handleUserMessageChange,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"4nm61/KN0r4T//eioGehTfRWqUU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","addProduct","_s","userMessage","setUserMessage","chatHistory","setChatHistory","chatContainerRef","handleUserMessageChange","event","target","value","handleUserMessageSubmit","preventDefault","trim","newChatHistory","message","isUser","responseMessage","newProduct","id","Date","now","name","length","link","imageSrc","response","setTimeout","current","scrollTop","scrollHeight","className","children","ref","map","chat","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/sohamkolambe/secondary-website/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css';\n\nconst Chatbot = ({ addProduct }) => {\n  const [userMessage, setUserMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const chatContainerRef = useRef(null);\n\n  const handleUserMessageChange = (event) => {\n    setUserMessage(event.target.value);\n  };\n\n  const handleUserMessageSubmit = (event) => {\n    event.preventDefault();\n    if (userMessage.trim() !== '') {\n      const newChatHistory = [...chatHistory, { message: userMessage, isUser: true }];\n      setChatHistory(newChatHistory);\n\n      // Simulating response from the system\n      const responseMessage = `You said: ${userMessage}`;\n      const newProduct = {\n        id: Date.now(),\n        name: `New Product ${newChatHistory.length}`,\n        link: 'https://example.com/new-product',\n        imageSrc: 'new-product.jpg',\n      };\n      addProduct(newProduct);\n\n      const response = { message: responseMessage, isUser: false };\n      setTimeout(() => {\n        setChatHistory([...newChatHistory, response]);\n        setUserMessage('');\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n\n  return (\n    <div className=\"chatbot\">\n      <div ref={chatContainerRef} className=\"chat-history\">\n        {chatHistory.map((chat, index) => (\n          <div key={index} className={`message ${chat.isUser ? 'user' : 'system'}`}>\n            {chat.message}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleUserMessageSubmit} className=\"user-input\">\n        <input\n          type=\"text\"\n          value={userMessage}\n          onChange={handleUserMessageChange}\n          placeholder=\"Type your message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}